# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Build at 00:00 on every 7th day-of-week
  schedule:
    - cron: "0 0 * * */7"
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # # This workflow contains a single job called "f2k"
  # f2k:
  #   # The type of runner that the job will run on
  #   runs-on: ubuntu-latest

  #   # Steps represent a sequence of tasks that will be executed as part of the job
  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - uses: actions/checkout@v2

  #     # Runs a set of commands using the runners shell
  #     - name: Run a multi-line script
  #       run: |
  #         set -ex
  #         bash deploy.sh -stable
  #         mkdir dist
  #         mv foobar2000*.AppImage* dist/.
  #         cd dist
  #         chmod +x *.AppImage
  #         cd ..

  #     - name: Upload artifact
  #       uses: actions/upload-artifact@v1.0.0
  #       with:
  #         name: foobar2000-continuous-x86_64.AppImage
  #         path: 'dist'

  # # This workflow contains a single job called "f2k-beta"
  # f2k-beta:
  #   # The type of runner that the job will run on
  #   runs-on: ubuntu-latest

  #   # Steps represent a sequence of tasks that will be executed as part of the job
  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - uses: actions/checkout@v2

  #     # Runs a set of commands using the runners shell
  #     - name: Run a multi-line script
  #       run: |
  #         set -ex
  #         bash deploy.sh -beta
  #         mkdir dist
  #         mv foobar2000*.AppImage* dist/.
  #         cd dist
  #         chmod +x *.AppImage
  #         cd ..

  #     - name: Upload artifact
  #       uses: actions/upload-artifact@v1.0.0
  #       with:
  #         name: foobar2000-beta-continuous-x86_64.AppImage
  #         path: 'dist'

  f2k-wp:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        uses: GabrielBB/xvfb-action@v1
        with:
          run: |
            set -ex
            # export DISPLAY=':99.0'
            # sudo Xvfb $DISPLAY -screen 0 1024x768x24 > /dev/null 2>&1 &
            bash deploy.sh -stablewp
            mkdir dist
            mv foobar2000*.AppImage* dist/.
            cd dist
            chmod +x *.AppImage
            cd ..

      - name: Upload artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: foobar2000-continuous-wp-x86_64.AppImage
          path: 'dist'

  # This workflow contains a single job called "f2k-beta"
  # f2k-beta-wp:
  #   # The type of runner that the job will run on
  #   runs-on: ubuntu-latest

  #   # Steps represent a sequence of tasks that will be executed as part of the job
  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - uses: actions/checkout@v2

  #     # Runs a set of commands using the runners shell
  #     - name: Run a multi-line script
  #       run: |
  #         set -ex
  #         export DISPLAY=':99.0'
  #         sudo Xvfb $DISPLAY -screen 0 1024x768x24 > /dev/null 2>&1 &
  #         bash deploy.sh -betawp
  #         mkdir dist
  #         mv foobar2000*.AppImage* dist/.
  #         cd dist
  #         chmod +x *.AppImage
  #         cd ..

  #     - name: Upload artifact
  #       uses: actions/upload-artifact@v1.0.0
  #       with:
  #         name: foobar2000-beta-continuous-wp-x86_64.AppImage
  #         path: 'dist'

  # Release-stable:
  #   needs: [f2k]
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: foobar2000-continuous-x86_64.AppImage

  #     - name: Release
  #       uses: marvinpinto/action-automatic-releases@latest
  #       with:
  #         title: foobar2000 Stable AppImage Builds
  #         automatic_release_tag: stable
  #         prerelease: false
  #         draft: false
  #         files: |
  #           foobar2000-continuous-x86_64.AppImage
  #         repo_token: ${{ secrets.GITHUB_TOKEN }}

  # Release-beta:
  #   needs: [f2k-beta]
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: foobar2000-beta-continuous-x86_64.AppImage

  #     - name: Release
  #       uses: marvinpinto/action-automatic-releases@latest
  #       with:
  #         title: foobar2000 Beta AppImage Builds
  #         automatic_release_tag: beta
  #         prerelease: true
  #         draft: false
  #         files: |
  #           foobar2000-beta-continuous-x86_64.AppImage
  #         repo_token: ${{ secrets.GITHUB_TOKEN }}

  Release-stable-wp:
    needs: [f2k-wp]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v1
        with:
          name: foobar2000-continuous-wp-x86_64.AppImage

      - name: Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          title: foobar2000 Stable AppImage Builds
          automatic_release_tag: stable-wp
          prerelease: false
          draft: false
          files: |
            foobar2000-continuous-wp-x86_64.AppImage
          repo_token: ${{ secrets.GITHUB_TOKEN }}

  # Release-beta-wp:
  #   needs: [f2k-beta-wp]
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: foobar2000-beta-continuous-wp-x86_64.AppImage

  #     - name: Release
  #       uses: marvinpinto/action-automatic-releases@latest
  #       with:
  #         title: foobar2000 Beta AppImage Builds
  #         automatic_release_tag: beta-wp
  #         prerelease: true
  #         draft: false
  #         files: |
  #           foobar2000-beta-continuous-wp-x86_64.AppImage
  #         repo_token: ${{ secrets.GITHUB_TOKEN }}
