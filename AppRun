#!/bin/bash

HERE="$(dirname "$(readlink -f "${0}")")"

progName="foobar2000"
progArch="-x86_64"
progVer=
progRealPath="$HERE/usr/share/$progName"
progHome="$HOME/.$progName"
progBin="$progName.exe"
progIcoD="$HOME/.local/share/applications/$progName.desktop"

# env used by unionfs-fuse
RO_WINEPREFIX="$HERE/.wine/"
MNT_WINEPREFIX="$progHome/.wine"
TMP_WINEPREFIX_OVERLAY=/tmp/."${progName}".unionfs

# Symlink stuff
mkdir -p "$MNT_WINEPREFIX" "$TMP_WINEPREFIX_OVERLAY" || exit 1
# Delete broken symlinks
find -L "$progHome" -maxdepth 2 -type l -delete
# Update existing symlinks, add new symlinks
cp -urs "$progRealPath/"* "$progHome" 2> /dev/null

# do unionfs-fuse magic here
"$HERE"/usr/bin/unionfs-fuse -o use_ino,nonempty,uid=$UID -ocow "$TMP_WINEPREFIX_OVERLAY"=RW:"$RO_WINEPREFIX"=RO "$MNT_WINEPREFIX" || exit 1

function finish {
  echo "Cleaning up"
  killall "$HERE"/usr/bin/unionfs-fuse
}
trap finish EXIT

dkico() {
if [[ ! -f $progIcoD ]]; then

cp -r "$HERE"/usr/share/icons "${HOME}"/.local/share
mkdir -p "${HOME}/.local/share/applications"
DesktopFilePath="${HOME}/.local/share/applications/$progName.desktop"

echo "[Desktop Entry]" >$DesktopFilePath
echo "Type=Application" >>$DesktopFilePath
echo "Name=$progName" >>$DesktopFilePath
echo "GenericName=Audio player" >>$DesktopFilePath
echo "Comment=Simple and powerful audio player." >>$DesktopFilePath
echo "Actions=PlayPause;Stop;Next;Prev;Random;Config" >>$DesktopFilePath
echo "Encoding=UTF-8" >>$DesktopFilePath
echo "Version=$progVer" >>$DesktopFilePath
echo "Icon=$progName" >>$DesktopFilePath
echo "TryExec=${OWD}/${progName}_${progVer}${progArch}.AppImage" >>$DesktopFilePath
echo "Exec=${OWD}/${progName}_${progVer}${progArch}.AppImage %F" >>$DesktopFilePath
echo "MimeType=audio/aac;audio/x-ape;audio/basic;audio/mp4;audio/mpeg;audio/mpegurl;audio/vorbis;audio/x-flac;audio/x-mp2;audio/x-mp3;audio/x-mpegurl;audio/x-ms-wma;audio/x-oggflac;audio/x-speex;audio/x-vorbis;audio/x-wav;audio/m3u;audio/x-aifc;audio/x-aiffc;audio/x-aiff;audio/x-musepack;audio/x-wavpack;x-content/audio-player;audio/x-matroska;audio/x-vorbis+ogg;" >>$DesktopFilePath
echo "Categories=AudioVideo;Audio;Player;" >>$DesktopFilePath
echo "Terminal=false" >>$DesktopFilePath
echo "StartupWMClass=$progBin" >>$DesktopFilePath
echo "" >>$DesktopFilePath
echo "[Desktop Action PlayPause]" >>$DesktopFilePath
echo "Name=Play/Pause" >>$DesktopFilePath
echo "Exec=${OWD}/${progName}_${progVer}${progArch}.AppImage -playpause" >>$DesktopFilePath
echo "" >>$DesktopFilePath
echo "[Desktop Action Stop]" >>$DesktopFilePath
echo "Name=Stop" >>$DesktopFilePath
echo "Exec=${OWD}/${progName}_${progVer}${progArch}.AppImage -stop" >>$DesktopFilePath
echo "" >>$DesktopFilePath
echo "[Desktop Action Next]" >>$DesktopFilePath
echo "Name=Next" >>$DesktopFilePath
echo "Exec=${OWD}/${progName}_${progVer}${progArch}.AppImage -next" >>$DesktopFilePath
echo "" >>$DesktopFilePath
echo "[Desktop Action Prev]" >>$DesktopFilePath
echo "Name=Prev" >>$DesktopFilePath
echo "Exec=${OWD}/${progName}_${progVer}${progArch}.AppImage -prev" >>$DesktopFilePath
echo "" >>$DesktopFilePath
echo "[Desktop Action Random]" >>$DesktopFilePath
echo "Name=Random" >>$DesktopFilePath
echo "Exec=${OWD}/${progName}_${progVer}${progArch}.AppImage -rand" >>$DesktopFilePath
echo "" >>$DesktopFilePath
echo "[Desktop Action Config]" >>$DesktopFilePath
echo "Name=Preferences" >>$DesktopFilePath
echo "Exec=${OWD}/${progName}_${progVer}${progArch}.AppImage -config" >>$DesktopFilePath

fi
}

# check for wine appimage
checkwine=$(find "$HOME"/Downloads "$HOME"/bin "$HOME"/.local/bin -type f \( -name '*.appimage' -o -name '*.AppImage' \) 2>/dev/null | grep -e "wine-stable" -e 'Wine-stable' | head -n 1 | wc -l)

if [ "$checkwine" -eq 1 ]; then
export WINESERVER=$HERE/usr/bin/wineserver
export WINE=$HERE/usr/bin/wine
else
echo "wine-stable appimage is missing can not run f2k"
echo ""
echo "Download wine-stable*bionic.appimage from https://github.com/mmtrt/Wine_Appimage/releases"
echo ""
echo "Then"
echo ""
echo "chmod +x wine-stable*.AppImage"
echo ""
echo "Also make sure you have single copy of wine-stable appimage present these locations"
echo ""
echo "$HOME/Downloads ; $HOME/bin ; $HOME/.local/bin"
exit 1
fi

# Create custom $WINEPREFIX and add $WINEDLLOVERRIDES
export WINEPREFIX="${progHome}/.wine" WINEDLLOVERRIDES="mscoree,mshtml=" WINEDEBUG="fixme-all" WINEARCH="win32"

# Passing args to wine apps
for i; do # for i = for i in "$@"
    # Add path in Wine form (e.g. "z:/home/user/Desktop/lol.xyz")
    if [[ -f /${i#?:} ]]; then 
        args+=("z:${i#?:}")   # When opened through .desktop or Wine path (e.g. z:/*)
    elif [[ "${i:0:1}" = "-" ]]; then
        args+=("${i/#-//}")
    fi
done

if [ "$1" == "winecfg" ] ; then
  $WINE "winecfg"
elif [ "$1" == "install" ]; then
  dkico
else
  $WINE "$progHome/$progBin" "${args[@]}"
fi
